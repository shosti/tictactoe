// Generated by CoffeeScript 1.3.3
(function() {
  var Game,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $(function() {
    var game;
    game = new Game;
    return $('td').click(function(e) {
      var col, row, _ref;
      _ref = this.id.split('').map(function(x) {
        return parseInt(x, 10);
      }), row = _ref[0], col = _ref[1];
      return game.move(row, col);
    });
  });

  Game = (function() {

    function Game(player) {
      this.player = player != null ? player : 'X';
      this.handleComputerMove = __bind(this.handleComputerMove, this);

      this.board = [[null, null, null], [null, null, null], [null, null, null]];
      this.isHumanTurn = this.player === 'X';
      this.drawBoard();
    }

    Game.prototype.move = function(row, col) {
      if (this.isHumanTurn && !this.board[row][col]) {
        this.board[row][col] = this.player;
        this.isHumanTurn = false;
        this.drawBoard();
        return this.requestComputerMove();
      }
    };

    Game.prototype.requestComputerMove = function() {
      return $.ajax({
        url: 'move',
        data: {
          board: JSON.stringify(this.board)
        },
        success: this.handleComputerMove,
        error: function(xhr, status, error) {
          return $('#status').text("Error: " + error);
        }
      });
    };

    Game.prototype.handleComputerMove = function(dataStr) {
      var data, statusText;
      data = JSON.parse(dataStr);
      this.board = data.board;
      if (data.winner) {
        this.drawBoard();
        statusText = data.winner === 'draw' ? "It's a draw!" : "" + data.winner + " wins!";
        return $('#status').text(statusText);
      } else {
        this.isHumanTurn = true;
        return this.drawBoard();
      }
    };

    Game.prototype.drawBoard = function() {
      var col, id, row, statusText, _i, _j;
      for (row = _i = 0; _i <= 2; row = ++_i) {
        for (col = _j = 0; _j <= 2; col = ++_j) {
          id = "#" + row + col;
          $(id).text(this.board[row][col] || '');
        }
      }
      statusText = this.isHumanTurn ? 'Your turn' : "Computer's turn";
      return $('#status').text(statusText);
    };

    return Game;

  })();

}).call(this);
